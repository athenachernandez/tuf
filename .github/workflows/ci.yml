name: Run TUF tests and linter

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      # Run regular TUF tests on each OS/Python combination, plus special tests
      # (sslib master) and linters on Linux/Python3.x only.
      matrix:
        python-version: [3.9]
        # python-version: [2.7, 3.6, 3.7, 3.8, 3.9]
        os: [ubuntu-latest]
        # os: [ubuntu-latest, macos-latest, windows-latest]
        toxenv: [py]
        # include:
        #   - python-version: 3.x
        #     os: ubuntu-latest
        #     toxenv: with-sslib-master
        #     experimental: true
        #   # TODO: Change to 3.x once pylint fully supports Python 3.9
        #   - python-version: 3.8
        #     os: ubuntu-latest
        #     toxenv: lint

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout TUF
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Find pip cache dir
        id: pip-cache
        run: echo "::set-output name=dir::$(pip cache dir)"

      - name: pip cache
        uses: actions/cache@v2
        with:
          # Use the system dependent pip cache directory found above
          path: ${{ steps.pip-cache.outputs.dir }}
          # An exact match with 'key' counts as cache hit
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}
          # A partial match via 'restore-keys' is used as fallback cache, but
          # will still create a new cache entry under the current key.
          restore-keys: ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox coveralls

      - name: Run tox
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}"
        run: |
          tox -e ${{ matrix.toxenv }}
          coveralls debug
          cp tests/.coverage* .
          coveralls debug


  #     - name: Publish coverage
  #       if: matrix.toxenv == 'py'
  #       uses: AndreMiras/coveralls-python-action@v20201129
  #       with:
  #         flag-name: ${{ runner.os }} / Python ${{ matrix.python-version }}
  #         parallel: true
  #         debug: true

  # finish:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Publish coverage (fin)
  #     uses: AndreMiras/coveralls-python-action@v20201129
  #     with:
  #       parallel-finished: true
  #       debug: true
